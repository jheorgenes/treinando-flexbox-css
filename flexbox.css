
/* CABEÇALHO */
.cabecalho__container {
  /*No container pai, define-se o tipo de display e o tipo de alinhamento dos items da lista */
  display: flex;
  justify-content: space-between; /* Alinha dentro do eixo-principal */
  align-items: center; /* Alinha fora do eixo-principal (eixo-transversal) */
  position: fixed; /* Informa que a posição desse container será FIXA (ou seja, scrollando o mouse ela continuará lá) */
  top: 0; /* Necessita passar em que posição será fixo */
}

.cabecalho__pesquisar__item {
  display: none; /* A propriedade some */
} 

/* MENU LATERAL */
.menu__container {
  position: fixed;
  bottom: 0%;
  height: 74px;
  width: 100%;
}

.menu__lista {
  display: flex;
  justify-content: space-around;
  height: 100%;
}

.menu__lista li {
  align-self: center; /* Propriedade aplicada apenas no ITEM DO CONTEINER, não aplica no CONTAINER */
}

.menu__itens {
  display: flex;
  flex-direction: column;
  gap: 7px;
}

/* Quando quer especificar quais filhos do container quer pegar  */
.menu__lista:nth-child(2),
.menu__lista:nth-child(3),
.menu__lista:nth-child(4) {
  display: none; /* Esconde a apresentação do container */
}

/* MENU LATERAL PARA TELAS DE TABLETS */
/* Quando a tela tiver o mínimo de 834px vai obdecer o bloco abaixo */
@media (min-width: 834px) {

  .menu__container {
    left: 0;
    height: auto; /* Vai pegar o espaço disponível automaticamente */
    width: 74px;
    top: 80px;
  }

  .menu__lista {
    flex-direction: column;
    justify-content: flex-start;
    padding-top: 15px;
    gap: 33px;
  }
}

/* MENU LATERAL PARA TELAS DE DESKTOP */
@media(min-width: 1440px) {

  .menu__container {
    width: 239PX;
    overflow: scroll;
  }

  .menu__lista:nth-child(2),
  .menu__lista:nth-child(3),
  .menu__lista:nth-child(4) {
    display: flex;
  }

  /* No início foi aplicado height 100% para pegar todo o espaço do container, agora que precisa aparecer todos os filhos da lista, usa-se o 'auto' pra renderizar a lista de itens de forma a preencher o espaço automaticamente */
  .menu__lista {
    height: auto;
    padding: 20px 17px 20px 15px;
    gap: 15px;
  }

  .menu__itens {
    flex-direction: row;
    gap: 15px;
    align-items: center;
  }

  .menu__lista:nth-child(3) {
    flex-direction: column-reverse;
  }

  .jogos {
    order: 3;
  }

  .filmes {
    order: 2;
  }

  .premium {
    order: 1;
  }

  .maispagina {
    order: 4;
  }

}

/* SUPERIOR SEÇÃO */

.superior__secao__container {
  display: flex;
  align-items: center;
  white-space: nowrap; /* No container, os textos que contém mais de uma palavra não irão quebrar em outra linha */
  overflow: scroll; /* cria uma barra de rolagem para scrollar dentro do container */
  gap: 15px; /* gap disponibiliza espaçamento somente ENTRE os itens e não nas laterais igual margin e outros (aplica-se somente no container pai) */
}

/* Pega a última classe .superior__item */
/* .superior__item:last-child {
  margin-right: 0px;
} */

/* VIDEO */
.videos__container {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.videos__item {
  height: 303px;
  width: 280px;
  flex-grow: 1; /* Especifica quanto o ITEM crescerá em relação ao restante dos itens FLEXÍVEIS do container */
}

/* DESCRIÇÃO VIDEOS */

.descricao-video {
    margin-top: 1rem;
    display: grid;
    text-align: start;
    column-gap: 1rem;
    row-gap: 10px;
    grid-template-columns: auto 1fr;
}

.descricao-video img {
    grid-area: 1 / 1 / 3 / 2;
}

.descricao-video h3 {
    grid-area: 1 / 2 / 2 / 3;
    font-weight: 700;
    color: #444444;
}

.descricao-video p {
    grid-area: 2 / 2 / 3 / 3;
    font-size: 14px;
    color: #444444;
}

/* RODAPE */
.rodape__container {
  display: flex;
  /* flex-direction: column; /* Propriedade do flexbox que altera o eixo (do vertical para horizontal e vice-versa)  */
  /* flex-wrap: wrap; /* quebra colunas (ou linhas) em mais colunas (ou linhas)  (wrap: quebra) (nowrap: nao quebra) (wrap-reverse: quebra invertido) */
  flex-flow: column wrap; /* Faz o mesmo que as duas propriedades acima, na mesma linha */
}

/* @media determina que: quando a tela tiver 834px de largura (min-width) será aplicado o css abaixo  */
@media (min-width: 834px) {
  /* CABEÇALHO */
  .cabecalho__pesquisar__item {
    display: block; /* valor padrão do display */
  }

  /* RODAPE */
  .rodape__container {
    justify-content: space-between;
  }
}